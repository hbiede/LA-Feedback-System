{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "plugin:typescript-sort-keys/recommended",
    "plugin:jsx-a11y/strict",
    "plugin:react/recommended",
    "airbnb",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "prettier",
    "prettier/@typescript-eslint"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "typescript-sort-keys",
    "button-label-required",
    "flowtype",
    "jsx-a11y",
    "react",
    "react-hooks",
    "@typescript-eslint",
    "prettier",
    "eslint-plugin-prettier",
    "import"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "trailingQuote": "always",
        "arrowParens": "always",
        "useTabs": false,
        "tabWidth": 2
      }
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-wrap-multilines": "off",
    "import/no-unresolved": "error",
    "no-nested-ternary": "off",
    "key-spacing": "off",
    "no-multi-spaces": "off",
    "no-case-declarations": "off",
    "prefer-promise-reject-errors": "off",
    "react/no-did-update-set-state": "off",
    "global-require": "off",
    "import/prefer-default-export": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/camelcase": [
      "warn",
      { "properties": "never", "ignoreDestructuring": true }
    ],
    "react/jsx-filename-extension": [
      1,
      { "extensions": [".js", ".jsx", ".tsx"] }
    ],
    "import/extensions": [
      "error",
      {
        "js": "never",
        "ts": "never",
        "tsx": "never",
        "json": "always"
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true
      }
    ],
    "flowtype/space-after-type-colon": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-empty-function": "off",
    "arrow-parens": ["error", "always"],
    "max-len": ["error", 100],
    "no-console": ["warn"],
    "no-underscore-dangle": ["warn", { "allowAfterThis": true }],
    "no-plusplus": 0,
    "prefer-destructuring": [
      "error",
      {
        "VariableDeclarator": {
          "array": false,
          "object": true
        },
        "AssignmentExpression": {
          "array": false,
          "object": true
        }
      }
    ],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          ["parent", "sibling", "index"]
        ],
        "newlines-between": "always-and-inside-groups"
      }
    ],
    "jsx-a11y/label-has-associated-control": [
      "error",
        {
          "labelComponents": [],
          "labelAttributes": [],
          "controlComponents": [],
          "assert": "either",
          "depth": 25
        }
    ],
    "jsx-a11y/label-has-for": [
      "error",
      {
        "components": ["label"],
        "required": {
          "some": ["nesting", "id"]
        }
      }
    ],
    "react/forbid-prop-types": 0,
    "react/sort-comp": [
      1,
      {
        "order": [
          "type-annotations",
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ]
      }
    ],
    "react/sort-prop-types": [
      "error",
      {
        "callbacksLast": true,
        "requiredFirst": false
      }
    ],
    "button-label-required/button-label-required": ["error"]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".ts", "tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "import/parser": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    }
  }
}
